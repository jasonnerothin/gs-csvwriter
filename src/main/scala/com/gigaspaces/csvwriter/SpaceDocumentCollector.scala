package com.gigaspaces.csvwriter

import com.gigaspaces.document.SpaceDocument
import scala.annotation.tailrec
import scala.collection.parallel.mutable.ParArray
import org.slf4j.LoggerFactory

/** This implementation is appropriate for small file sizes - e.g. when the entire
  * file can be interpolated into [[SpaceDocument]]s and stored in available memory.
  * @param reader a source of [[SpaceDocument]]s
  */
class SpaceDocumentCollector(reader: DocumentReader) {

  val logger = LoggerFactory.getLogger(getClass)

  /**
   * Generate [[SpaceDocument]]s from the documentReader
   * @param spaceDocs a parallelizable sequence of [[SpaceDocument]]s
   * @return a [[ParArray]] that grows to include [[SpaceDocument]]s generated by the reader
   */
  @tailrec
  final def collect(spaceDocs: ParArray[SpaceDocument]): ParArray[SpaceDocument] = {
    reader.nextDocument() match {
      case None => spaceDocs
      case Some(doc: SpaceDocument) => collect(spaceDocs :+ doc)
    }
  }

}